// ***********************************************************************
// ⚡ MvvmGen => https://github.com/thomasclaudiushuber/mvvmgen
// Copyright © by Thomas Claudius Huber
// Licensed under the MIT license => See LICENSE file in repository root
// ***********************************************************************

using System.Text;
using Xunit;

namespace MvvmGen.SourceGenerators;

public class PropertyPublishEventAttributeTests : ViewModelGeneratorTestsBase
{
    [InlineData("int Id, string FirstName", "value.Id, value.FirstName")]
    [InlineData("int Id", "value.Id")]
    [InlineData("Employee emp", "value")]
    [InlineData("", "")]
    [Theory]
    public void GeneratePublishEventInProperty(string eventConstructorParameters, string attributeConstructorParameters)
    {
        var attributeNamedArgument = ", EventConstructorArgs=";
        if (!string.IsNullOrEmpty(attributeConstructorParameters))
        {
            attributeNamedArgument += $"\"{ attributeConstructorParameters}\"";
        }
        else
        {
            attributeNamedArgument = "";
        }

        ShouldGenerateExpectedCode(
            $@"using MvvmGen;
using MvvmGen.Events;

namespace MyCode
{{
  public record SelectedEmployeeChangedEvent({eventConstructorParameters})

  class Employee
  {{
    public int Id {{ get; set; }}
    public string FirstName {{ get; set; }}
  }}

  [Inject(typeof(IEventAggregator))]
  [ViewModel]
  public partial class EmployeeViewModel
  {{
    [PropertyPublishEvent(typeof(SelectedEmployeeChangedEvent){attributeNamedArgument})]
    [Property]
    private Employee _selectedItem;
  }}
}}",
            $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel(MvvmGen.Events.IEventAggregator eventAggregator)
        {{
            this.EventAggregator = eventAggregator;
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public MyCode.Employee SelectedItem
        {{
            get => _selectedItem;
            set
            {{
                if (_selectedItem != value)
                {{
                    _selectedItem = value;
                    OnPropertyChanged(""SelectedItem"");
                    EventAggregator.Publish(new MyCode.SelectedEmployeeChangedEvent({attributeConstructorParameters}));
                }}
            }}
        }}

        protected MvvmGen.Events.IEventAggregator EventAggregator {{ get; private set; }}
    }}
}}
");
    }

    [InlineData("value is not null")]
    [InlineData("")]
    [InlineData(null)]
    [Theory]
    public void GeneratePublishEventInPropertyWithCondition(string publishCondition)
    {
        var publishStatement = "EventAggregator.Publish(new MyCode.SelectedEmployeeChangedEvent());";
        var publishConditionArgument = "";
        var indent = "                    ";
        var expectedPublishCode = $"{indent}{publishStatement}";

        if (publishCondition is { Length: > 0 })
        {
            publishConditionArgument = $", PublishCondition=\"{publishCondition}\"";
            var stringBuilder = new StringBuilder();
            stringBuilder.AppendLine($"{indent}if ({publishCondition})");
            stringBuilder.AppendLine($"{indent}{{");
            stringBuilder.AppendLine($"{indent}    {publishStatement}");
            stringBuilder.Append($"{indent}}}");
            expectedPublishCode = stringBuilder.ToString();
        }

        ShouldGenerateExpectedCode(
            $@"using MvvmGen;
using MvvmGen.Events;

namespace MyCode
{{
  public record SelectedEmployeeChangedEvent()

  class Employee
  {{
    public int Id {{ get; set; }}
    public string FirstName {{ get; set; }}
  }}

  [Inject(typeof(IEventAggregator))]
  [ViewModel]
  public partial class EmployeeViewModel
  {{
    [PropertyPublishEvent(typeof(SelectedEmployeeChangedEvent){publishConditionArgument})]
    [Property]
    private Employee _selectedItem;
  }}
}}",
            $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel(MvvmGen.Events.IEventAggregator eventAggregator)
        {{
            this.EventAggregator = eventAggregator;
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public MyCode.Employee SelectedItem
        {{
            get => _selectedItem;
            set
            {{
                if (_selectedItem != value)
                {{
                    _selectedItem = value;
                    OnPropertyChanged(""SelectedItem"");
{expectedPublishCode}
                }}
            }}
        }}

        protected MvvmGen.Events.IEventAggregator EventAggregator {{ get; private set; }}
    }}
}}
");
    }
}